-- Why This Feature is Relevant for SQL Server 2025 and GenAI for Data Engineers
--
-- The integration of SQL Server 2025 with GenAI capabilities provides data engineers with unprecedented
-- opportunities to incorporate advanced AI features directly into their workflows. Specifically, the ability
-- to retrieve embeddings via REST endpoints and process them within SQL Server extends its utility as a
-- modern data platform. Embeddings are core to many GenAI applications, such as natural language processing,
-- recommendation systems, and semantic search. By enabling this feature:
--
-- 1. Data engineers can seamlessly integrate GenAI capabilities into their ETL pipelines without external tools.
-- 2. SQL Server becomes a central hub for managing both structured data and AI-driven insights.
-- 3. Teams can reduce latency and improve efficiency by performing embedding-related tasks within the database.
--
-- This capability makes SQL Server 2025 an essential tool for organizations leveraging AI to extract deeper
-- insights and build smarter, faster applications.

-- Create or alter the procedure to get embeddings using an external REST endpoint
CREATE OR ALTER PROCEDURE [web].[get_embedding]
    @inputText NVARCHAR(MAX),
    @embedding VECTOR(1536) OUTPUT
AS
BEGIN
    BEGIN TRY
        DECLARE @retval INT;
        DECLARE @payload NVARCHAR(MAX) = JSON_OBJECT('input': @inputText);
        DECLARE @response NVARCHAR(MAX);

        EXEC @retval = sp_invoke_external_rest_endpoint 
            @url = 'https://dm-open-ai.openai.azure.com/openai/deployments/text-embedding-3-small/embeddings?api-version=2023-05-15',
            @method = 'POST',
            @credential = '[https://dm-open-ai.openai.azure.com]',
            @payload = @payload,
            @response = @response OUTPUT;

        -- Handle any errors from the REST endpoint invocation
        IF (@retval != 0)
        BEGIN
            SELECT 
                'OPENAI' AS error_source,
                JSON_VALUE(@response, '$.result.error.code') AS error_code,
                JSON_VALUE(@response, '$.result.error.message') AS error_message,
                @response AS error_response;
            RETURN;
        END;

        -- Parse the embedding from the JSON response
        DECLARE @re NVARCHAR(MAX) = JSON_QUERY(@response, '$.result.data[0].embedding');
        SET @embedding = CAST(@re AS VECTOR(1536));

    END TRY
    BEGIN CATCH
        SELECT 
            'SQL' AS error_source,
            ERROR_NUMBER() AS error_code,
            ERROR_MESSAGE() AS error_message;
        RETURN;
    END CATCH
END;

-- Example on how to execute the [web].[get_embedding] procedure
DECLARE @inputText NVARCHAR(MAX) = 'Sample input text';
DECLARE @embedding VECTOR(1536);

EXEC [web].[get_embedding]
    @inputText = @inputText,
    @embedding = @embedding OUTPUT;

-- Output the embedding
SELECT @embedding AS EmbeddingResult;

-- Sample test data showing what the EmbeddingResult may look like
-- This assumes the embedding is a vector with 1536 dimensions and example data values
-- Note: Replace this with actual data generated by the API for realistic representation
SELECT CAST('[0.1234, -0.5678, 0.9012, ..., -0.1234]' AS VECTOR(1536)) AS EmbeddingResultSample;
